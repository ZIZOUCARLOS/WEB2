.hero {
    position: relative;
}
.play-wrapper{
    /* Se utiliza para que todos los elemento contenidos se puedan posisionar en forma absoluta  */
position: relative;
display: flex;
justify-content: center;
/* centrar de forma vertical */
align-items: center;

}
.plate{
    width: 120px;
    height: auto;
    padding: 1rem 0;
}
.plate-circle{
    background-color: var(--primary-color);
    /* Estilar el elemento con un ancho fijo para estilarlo */
    width: 100%;
    height: 100%;
    /* propiedad absolute para que este por el fondo del plato */
    position: absolute;
    top: 0;
    /* z idex para superponer un elemento */
    z-index: -1;
    /* circulo con berde radius */
    border-radius: 0 0 50% 50% ;
    /* transformar el radio  */
    transform: translate(0, -45%);
}

/* la propiedad flex se utiliza en el padre, el flex ancha los elementos */

.hero-content{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1.5rem;
    width: 100%;
}

.hero-tittle{
font-size: 3rem;
text-align: center;
/* propiedad max-width: ; le dice al texto que ocupe un maximo de 400px
 */
 max-width: 400px;

}
/* colocar la clase padre y anidar el elemento que le sigue
.hero-content > button {
    
} */
.hero-button{
    background-color: var(--black-color);
    color: white;
    padding: 0.75em 1em;
    border-radius: 20px;
    /* //propiedad para el boton para que sea responsive fit content:; */
    width: fit-content;
}
.left-floating{
    width: 100px;
    position: absolute;

}
.right-floating{
    width: 100px;
    position: absolute;
}